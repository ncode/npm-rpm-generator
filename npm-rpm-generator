#!/usr/bin/python

# Copyright 2014
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
# Based on: https://github.com/weikinhuang/nodejs-rpm
#
# @author: Juliano Martinez (ncode)

import os
import sys
import json
import shutil
import subprocess
import tempfile
import tarfile

from Cheetah.Template import Template

def meta_generator(module, workdir):
    tmpdir=tempfile.mkdtemp(module)
    print tmpdir
    os.chdir(tmpdir)
    name, version = module.split('@')
    data = {
        'bin': [],
        'source': '%s/SOURCES/%s.tar.gz' % (workdir, name),
        'workdir': workdir,
        'tmpdir': tmpdir,
        'name': 'nodejs-%s' % name,
        'npm_meta': None,
        'module': name
    }
    os.chdir(tmpdir)
    os.mkdir(name)
    subprocess.check_output(
        'npm -g --production --prefix="%s" install "%s"' %(
            data['name'], module
        ),
        stderr=subprocess.STDOUT, shell=True
    )
    with tarfile.open(data['source'], 'w:gz') as tar:
        tar.add(data['name'], arcname=os.path.basename(data['name']))

    if os.path.isdir('%s/%s/bin/' % (tmpdir, data['name'])):
        for _file in os.listdir('%s/%s/bin/' % (tmpdir, data['name'])):
            data['bin'].append('%%attr(0755,root,root) %%{_prefix}/bin/%s' % _file)

    data['npm_meta'] = json.loads(open(
        '%s/%s/lib/node_modules/%s/package.json' % (
            tmpdir, data['name'], name
        )).read()
    )

    if not 'homepage' in data['npm_meta']:
        data['npm_meta'].update(
            {'homepage': 'https://npmjs.org/package/%s' % name}
        )
    return data


def setup_workdir():
    workdir=tempfile.mkdtemp('npm')
    print workdir
    os.chdir(workdir)
    ([ os.mkdir(directory) for directory in
        ['BUILD', 'BUILDROOT', 'RPMS', 'SOURCES',
         'SPECS', 'SRPMS', 'tmp']])
    return workdir


def render_spec(meta):
    dependencies = [('nodejs', meta['nodejs'])]
    if 'dependencies' in meta['npm_meta']:
        for module, version in meta['npm_meta']['dependencies'].iteritems():
            dependencies.append((module, version.lstrip('~')))
    print dependencies

    render = Template(
        file='/home/jumartinez/nodejs-module-spec.tmpl',
        searchList=[{
            'version': meta['npm_meta']['version'],
            'name': meta['name'],
            'description': meta['npm_meta']['description'],
            'homepage': meta['npm_meta']['homepage'],
            'bin': meta['bin'],
            'source': os.path.basename(meta['source']),
            'module': meta['module'],
            'dependencies': dependencies
        }]
    )
    open('%s/SPECS/%s.spec' %
        (meta['workdir'], meta['name']),
    'w').write(str(render))
    print render


def build_deps(dependencies):
    for module, version in dependencies.iteritems():
        build('%s@%s' % (module, version))


def build(module):
    workdir = setup_workdir()
    meta = meta_generator(module, workdir)
    meta.update({'nodejs': nodejs})

    if 'dependencies' in meta['npm_meta']:
        build_deps(meta['npm_meta']['dependencies'])

    render_spec(meta)
    subprocess.check_output(
        ('rpmbuild -ba --define="_topdir %s" '
         '--define="_tmppath %s/tmp" %s/SPECS/%s.spec' % (
            meta['workdir'], meta['workdir'],
            meta['workdir'], meta['name']
         )
        ),
        stderr=subprocess.STDOUT, shell=True
    )

    for _file in os.listdir('%s/RPMS' % meta['workdir']):
        shutil.move('%s/RPMS/%s' % (meta['workdir'], _file), '/home/jumartinez/RPMS/%s' % _file)

    for _file in os.listdir('%s/SRPMS' % meta['workdir']):
        shutil.move('%s/SRPMS/%s' % (meta['workdir'], _file), '/home/jumartinez/SRPMS/%s' % _file)

if __name__ == '__main__':

    if len(sys.argv) != 2:
        print "Usage::"
        print "    %s module@version -> for a specific version" % os.path.basename(sys.arv[0])
        print "    %s module         -> for the latest version" % os.path.basename(sys.arv[0])
        sys.exit(1)

    module = sys.argv[1] if '@' in sys.argv[1] else "@%s" % sys.argv[1]
    try:
        nodejs = subprocess.check_output(["node", "-v"]).strip().lstrip('v')
        npm = subprocess.check_output(["npm", "-v"]).strip()
    except Exception as e:
        print "You have to have nodejs and npm installed before start"
        sys.exit(1)
    build(module)